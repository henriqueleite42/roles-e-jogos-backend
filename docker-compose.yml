services:
  localstack:
    # https://medium.com/@muthomititus/a-guide-to-localstack-with-docker-compose-e1487e3a776f
    image: localstack/localstack
    container_name: rolesejogos-localstack
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3,secretsmanager,ssm,ses,sqs,sns,cloudformation,ec2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_SESSION_TOKEN=test
      - AWS_REGION=us-east-1
      - LOG_LEVEL=WARN
    env_file:
      - .env.docker
    volumes:
      - "./localstack/scripts:/etc/localstack/init/ready.d"
      - "./cloudformation:/etc/localstack/cloudformation"
      - "./localstack/volume:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: curl -v localhost:4566/_localstack/init/ready --stderr - | grep SUCCESSFUL
      interval: 10s
      timeout: 10s
      retries: 100
      # start_period: 30s
      start_interval: 10s
    networks:
      - rolesejogos-api_network

  postgres:
    image: "postgres:latest"
    container_name: rolesejogos-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
    volumes:
      - "postgres:/var/lib/postgresql/data/"
    networks:
      - rolesejogos-api_network

  api:
    build:
      context: "."
      dockerfile: Dockerfile.dev
    image: rolesejogos-api
    container_name: rolesejogos-api
    command: ./bin
    depends_on:
      localstack:
        condition: service_healthy
        required: true
      postgres:
        condition: service_started
        required: true
    ports:
      - 3001:3001
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_SESSION_TOKEN=test
      - AWS_REGION=us-east-1
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      - GODEBUG=netdns=cgo
      - LOG_LEVEL=TRACE
    env_file:
      - .env.docker
    networks:
      - rolesejogos-api_network

volumes:
  postgres:

networks:
  rolesejogos-api_network:
    driver: bridge
